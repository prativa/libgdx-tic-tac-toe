package View;

import Sceene.GameScreen;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.graphics.Camera;
import com.badlogic.gdx.graphics.OrthographicCamera;
import com.badlogic.gdx.math.Vector3;

public class InputProcessor implements com.badlogic.gdx.InputProcessor {
	private Vector3 touchPoint;
	WorldRender render;
	WorldHandler game;
	private OrthographicCamera camera;
	public boolean turn = true;
	public InputProcessor(WorldHandler game) {
		// TODO Auto-generated constructor stub
		this.game = game;
		touchPoint = new Vector3();
		render = new WorldRender(game);
		camera =render.getCamera();
		
	}
	
	
	@Override
	public boolean keyDown(int keycode) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean keyUp(int keycode) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean keyTyped(char character) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean touchDown(int x, int y, int pointer, int button) {
		// TODO Auto-generated method stub
		touchPoint.set(x, y, 0);
	    // this modifies the vector
	    camera.unproject(touchPoint);
	    // touchPoint now contains correct coordinates
	    checkClickInBoces(touchPoint);
		return false;
	}

	private void checkClickInBoces(Vector3 touchPoint2) {
		// TODO Auto-generated method stub
			
		// top row 
			if(touchPoint.x < 16.66 && touchPoint.x > 2 ){
		    	if(touchPoint.y>36.666 && touchPoint.y < 48 ){
			    	Gdx.app.log("hej", "hej");

		    		if(turn){
		    			game.positionItem[0]=0;
		    			turn = false;
		    		}else{
		    			game.positionItem[0]=9;
		    			turn = true;

		    		}
		    	}
		    }
		    if(touchPoint.x < 33.333 && touchPoint.x > 18.66 ){
		    	if(touchPoint.y>36.666 && touchPoint.y < 48 ){
		    	Gdx.app.log("hej", "hej");
		    	if(turn){
	    			game.positionItem[1]=1;
	    			turn = false;
	    		}else{
	    			game.positionItem[1]=10;
	    			turn = true;

	    		}
		    	}
		    }
		    if(touchPoint.x < 48 && touchPoint.x > 35.3333 ){
		    	if(touchPoint.y>36.666 && touchPoint.y < 48 ){
		    	Gdx.app.log("hej", "hej");
		    	if(turn){
	    			game.positionItem[2]=2;
	    			turn = false;
	    		}else{
	    			game.positionItem[2]=11;
	    			turn = true;

	    		}
		    	}
		    }
		    
		// midle row
		    if(touchPoint.x < 16.66 && touchPoint.x > 2 ){
		    	if(touchPoint.y>18.666 && touchPoint.y < 33.3333 ){
		    	Gdx.app.log("hej", "hej1");
		    	if(turn){
	    			game.positionItem[3]=3;
	    			turn = false;
	    		}else{
	    			game.positionItem[3]=13;
	    			turn = true;

	    		}
		    	}
		    }
		    if(touchPoint.x < 33.333 && touchPoint.x > 18.66 ){
		    	if(touchPoint.y>18.666 && touchPoint.y < 33.3333 ){
		    	Gdx.app.log("hej", "hej");
		    	if(turn){
	    			game.positionItem[4]=4;
	    			turn = false;
	    		}else{
	    			game.positionItem[4]=15;
	    			turn = true;

	    		}
		    	}
		    }
		    if(touchPoint.x < 48 && touchPoint.x > 35.3333 ){
		    	if(touchPoint.y>18.666 && touchPoint.y < 33.3333 ){
		    	Gdx.app.log("hej", "hej");
		    	if(turn){
	    			game.positionItem[0]=5;
	    			turn = false;
	    		}else{
	    			game.positionItem[0]=16;
	    			turn = true;

	    		}
		    	}
		    }
		// lower row
		    if(touchPoint.x < 16.66 && touchPoint.x > 2 ){
		    	if(touchPoint.y>2 && touchPoint.y < 16.666 ){
		    	Gdx.app.log("hej", "hej");
		    	if(turn){
	    			game.positionItem[6]=6;
	    			turn = false;
	    		}else{
	    			game.positionItem[6]=17;
	    			turn = true;

	    		}
		    	}
		    }
		    if(touchPoint.x < 33.333 && touchPoint.x > 18.66 ){
		    	if(touchPoint.y>2 && touchPoint.y < 16.666 ){
		    	Gdx.app.log("hej", "hej");
		    	if(turn){
	    			game.positionItem[7]=7;
	    			turn = false;
	    		}else{
	    			game.positionItem[7]=18;
	    			turn = true;

	    		}
		    	}
		    }
		    if(touchPoint.x < 48 && touchPoint.x > 35.3333 ){
		    	if(touchPoint.y>2 && touchPoint.y < 16.666 ){
		    	Gdx.app.log("hej", "hej");
		    	if(turn){
	    			game.positionItem[8]=8;
	    			turn = false;
	    		}else{
	    			game.positionItem[8]=19;
	    			turn = true;

	    		}
		    	}
		    }
		    
	}


	@Override
	public boolean touchUp(int screenX, int screenY, int pointer, int button) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean touchDragged(int screenX, int screenY, int pointer) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean mouseMoved(int screenX, int screenY) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean scrolled(int amount) {
		// TODO Auto-generated method stub
		return false;
	}

}
